#     _             _     _ ____            _     _
#    / \   _ __ ___| |__ (_)  _ \ _ __ ___ (_) __| |
#   / _ \ | '__/ __| '_ \| | | | | '__/ _ \| |/ _` |
#  / ___ \| | | (__| | | | | |_| | | | (_) | | (_| |
# /_/   \_\_|  \___|_| |_|_|____/|_|  \___/|_|\__,_|
#
# Copyright 2014 Łukasz "JustArchi" Domeradzki
# Contact: JustArchi@JustArchi.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ui_print(">>> ArchiDroid is now loading...");
assert(getprop("ro.product.device") == "BRINGUP" ||
	   abort("This package is for device: BRINGUP; this device is " + getprop("ro.product.device") + "."););

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Ready!");
set_progress(0.01);


################
### RECOVERY ###
################

### BOOT ###
if file_getprop("/tmp/aroma-data/archidroidrecovery.prop", "recovery") == "boot" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing new kernel + recovery combo");
	package_extract_file("boot.img", file_getprop("/tmp/aroma-data/device.prop", "kernel"));
endif;

### TWRP ###
if file_getprop("/tmp/aroma-data/archidroidrecovery.prop", "recovery") == "twrp" then
	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing TWRP recovery");
	package_extract_file("_archidroid/recoveries/twrp/recovery.img", file_getprop("/tmp/aroma-data/device.prop", "recovery"));
endif;

if file_getprop("/tmp/aroma-data/archidroidrecovery.prop", "recovery") == "none" then
	if file_getprop("/tmp/aroma-data/archidroidwipe.prop", "wipe") != "yes" then
		package_extract_file("system/bin/otasigcheck.sh", "/tmp/otasigcheck.sh");
		package_extract_file("META-INF/org/cyanogenmod/releasekey", "/tmp/releasekey");
		set_metadata("/tmp/otasigcheck.sh", "uid", 0, "gid", 0, "mode", 0755);
		run_program("/tmp/otasigcheck.sh");
		sha1_check(read_file("/tmp/releasekey"),"7241e92725436afc79389d4fc2333a2aa8c20230") && abort("Can't install this package on top of incompatible data. Please try another package or run a factory reset");
	endif;

	### ARCHIDROID TOOLS ###
	package_extract_file("_archidroid/exec/adlock.sh", "/tmp/adlock.sh");
	set_perm(0, 0, 0755, "/tmp/adlock.sh");

	set_progress(0.02);

	if file_getprop("/tmp/aroma-data/archidroidwipe.prop", "wipe") == "no" && file_getprop("/tmp/aroma-data/archidroidinstallmode.prop", "preset") != "barebones" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Backing up all addons");
		package_extract_file("system/bin/backuptool.sh", "/tmp/backuptool.sh");
		package_extract_file("system/bin/backuptool.functions", "/tmp/backuptool.functions");
		set_metadata("/tmp/backuptool.sh", "uid", 0, "gid", 0, "mode", 0755);
		set_metadata("/tmp/backuptool.functions", "uid", 0, "gid", 0, "mode", 0644);
		run_program("/tmp/backuptool.sh", "backup");
	endif;

	set_progress(0.03);

	### UNLOCK ###
	run_program("/tmp/adlock.sh", "unlock", "/system/etc/hosts");

	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Wiping system partition");
	delete_recursive("/system");

	set_progress(0.07);

	if file_getprop("/tmp/aroma-data/archidroidwipe.prop", "wipe") == "yes" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Wiping /data excluding /data/media");
		package_extract_file("_archidroid/exec/wipe.sh", "/tmp/wipe.sh");
		set_perm(0, 0, 0755, "/tmp/wipe.sh");
		run_program("/tmp/wipe.sh");
		delete("/tmp/wipe.sh");
	endif;

	set_progress(0.08);

	if file_getprop("/tmp/aroma-data/archidroidwipe.prop", "wipe") == "no" then
		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Wiping dalvik cache and resource cache");
		delete_recursive("/data/dalvik-cache");
		delete_recursive("/data/resource-cache");
	endif;

	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Executing pre-install ArchiDroid scripts");
	package_extract_file("_archidroid/exec/archidroid.sh", "/tmp/archidroid.sh");
	set_perm(0, 0, 0755, "/tmp/archidroid.sh");

	if file_getprop("/tmp/aroma-data/archidroidwipe.prop", "wipe") == "yes" then
		ui_print("<b><#ff0000>RunOnce</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>$</#></b> Install mode detected");
		run_program("/tmp/archidroid.sh", "INSTALL");
	else
		ui_print("<b><#ff0000>RunOnce</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>$</#></b> Update mode detected");
		run_program("/tmp/archidroid.sh", "UPDATE");
	endif;

	delete("/tmp/archidroid.sh");

	set_progress(0.1);

	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing ArchiDroid base");
	show_progress(0.4, 1500);
	package_extract_dir("recovery", "/system");
	package_extract_dir("system", "/system");
	delete("/system/bin/otasigcheck.sh");
	set_progress(0.51);

	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Creating symlinks");
	### BRINGUP ###

	set_progress(0.52);

	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing ArchiDroid backend");
	### IMPORTANT ###
	package_extract_dir("_archidroid/auto", "/");
	package_extract_file("_archidroid/exec/archidroid_backend.sh", "/tmp/archidroid_backend.sh");
	set_perm(0, 0, 0755, "/tmp/archidroid_backend.sh");
	run_program("/tmp/archidroid_backend.sh", file_getprop("/tmp/aroma-data/archidroidinstallmode.prop", "preset"));
	delete("/tmp/archidroid_backend.sh");
	### IMPORTANT ###

	set_progress(0.53);

	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Setting permissions");
	### BRINGUP ###

	set_progress(0.54);

	ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Cleaning old kernel");
	package_extract_file("boot.img", file_getprop("/tmp/aroma-data/device.prop", "kernel"));
	
	#################
	### BAREBONES ###
	#################
	if file_getprop("/tmp/aroma-data/archidroidinstallmode.prop", "preset") == "barebones" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing Stock kernel");
			# We have stock kernel already
	else
		##############
		### KERNEL ###
		##############

		### STOCK ###
		if file_getprop("/tmp/aroma-data/archidroid.prop", "kernel") == "stock" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Flashing Stock kernel");
			# We have stock kernel already
		endif;

		set_progress(0.6);


		###############
		### RESTORE ###
		###############

		if file_getprop("/tmp/aroma-data/archidroidwipe.prop", "wipe") == "no" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Restoring addons");
			package_extract_file("system/bin/backuptool.sh", "/tmp/backuptool.sh");
			package_extract_file("system/bin/backuptool.functions", "/tmp/backuptool.functions");
			set_metadata("/tmp/backuptool.sh", "uid", 0, "gid", 0, "mode", 0755);
			set_metadata("/tmp/backuptool.functions", "uid", 0, "gid", 0, "mode", 0644);
			run_program("/tmp/backuptool.sh", "restore");
			delete("/system/bin/backuptool.sh");
			delete("/system/bin/backuptool.functions");
		endif;

		set_progress(0.63);


		############
		### ROOT ###
		############

		### CHAINFIRE ###
		if file_getprop("/tmp/aroma-data/archidroid.prop", "superuser") == "chainfire" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing SuperSU by Chainfire");
			package_extract_dir("_archidroid/root/chainfire/system", "/system");
			symlink("/system/xbin/su", "/system/bin/su");
			symlink("/system/etc/install-recovery.sh", "/system/bin/install-recovery.sh");
			set_metadata("/system/etc/install-recovery.sh", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:toolbox_exec:s0");
			set_metadata("/system/etc/init.d/99SuperSUDaemon", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
			set_metadata("/system/xbin/su", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
			set_metadata("/system/xbin/supolicy", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");

			# SuperSU requires some additional work
			package_extract_file("_archidroid/root/chainfire/chainfire.sh", "/tmp/chainfire.sh");
			set_perm(0, 0, 0755, "/tmp/chainfire.sh");
			run_program("/tmp/chainfire.sh");
			delete("/tmp/chainfire.sh");

			# Apply permissions
			set_metadata("/system/xbin/sugote", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
			set_metadata("/system/xbin/sugote-mksh", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
			set_metadata("/system/bin/.ext", "uid", 0, "gid", 0, "mode", 0777, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
			run_program("/system/xbin/su", "--install");
		endif;

		### KOUSH ###
		if file_getprop("/tmp/aroma-data/archidroid.prop", "superuser") == "koush" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Superuser by Koush");
			# This is default already
		endif;

		### NONE ###
		if file_getprop("/tmp/aroma-data/archidroid.prop", "superuser") == "none" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Disabling root access");
			package_extract_file("_archidroid/root/none/disableroot.sh", "/tmp/disableroot.sh");
			set_perm(0, 0, 0755, "/tmp/disableroot.sh");
			run_program("/tmp/disableroot.sh");
			delete("/tmp/disableroot.sh");
		endif;


		###############
		### DENSITY ###
		###############

		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ", file_getprop("/tmp/aroma-data/archidroid.prop", "density"), " density");
		package_extract_file("_archidroid/exec/density.sh", "/tmp/density.sh");
		set_perm(0, 0, 0755, "/tmp/density.sh");
		run_program("/tmp/density.sh", file_getprop("/tmp/aroma-data/archidroid.prop", "density"));
		delete("/tmp/density.sh");

		set_progress(0.64);


		#############
		### GAPPS ###
		#############

		if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps") == "1" || file_getprop("/tmp/aroma-data/archidroid.prop", "keyboard") == "google" || file_getprop("/tmp/aroma-data/archidroid.prop", "launcher") == "google" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Apps");
			delete("/system/app/Calendar.apk", "/system/app/Calendar.odex", "/system/app/QuickSearchBox.apk", "/system/app/QuickSearchBox.odex");
			show_progress(0.15, 100);
			package_extract_dir("_archidroid/gapps/archidroid", "/");
			package_extract_dir("_archidroid/gapps/pa/Core/required", "/system");
			package_extract_dir("_archidroid/gapps/pa/GMSCore/common", "/system");

			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-bksync") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Bookmarks Sync");
				package_extract_dir("_archidroid/gapps/pa/GApps/bksync", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-calendargoogle") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Calendar");
				delete("/system/app/Calendar.apk", "/system/app/Calendar.odex");
				package_extract_dir("_archidroid/gapps/pa/GApps/calendargoogle", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-calsync") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Calendar Sync");
				package_extract_dir("_archidroid/gapps/pa/GApps/calsync", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-faceunlock") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Face Unlock");
				package_extract_dir("_archidroid/gapps/pa/GApps/faceunlock", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-gmail") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Gmail");
				package_extract_dir("_archidroid/gapps/pa/GApps/gmail", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-googleplus") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Plus");
				package_extract_dir("_archidroid/gapps/pa/GApps/googleplus", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-googletts") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Text-To-Speech");
				package_extract_dir("_archidroid/gapps/pa/GApps/googletts", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-hangouts") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Hangouts");
				package_extract_dir("_archidroid/gapps/pa/GApps/hangouts", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-maps") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Maps");
				package_extract_dir("_archidroid/gapps/pa/GApps/maps", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-search") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Search");
				package_extract_dir("_archidroid/gapps/pa/GApps/search", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-speech") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Speech");
				package_extract_dir("_archidroid/gapps/pa/GApps/speech", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-street") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google Street View");
				package_extract_dir("_archidroid/gapps/pa/GApps/street", "/system");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "gapps-youtube") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing YouTube");
				package_extract_dir("_archidroid/gapps/pa/GApps/youtube", "/system");
			endif;

		endif;

		set_progress(0.80);


		##############
		### XPOSED ###
		##############

		if file_getprop("/tmp/aroma-data/archidroid.prop", "xposed") == "1" then

			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Xposed framework");
			run_program("/sbin/mv", "/system/bin/app_process", "/system/bin/app_process.orig");
			package_extract_dir("_archidroid/apps/xposed/xposed", "/");
			set_metadata("/system/bin/app_process", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");

			# Optional modules
			if file_getprop("/tmp/aroma-data/archidroid.prop", "xposed-gravitybox") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Including GravityBox module");
				package_extract_dir("_archidroid/apps/xposed/gravitybox", "/");
			endif;
			if file_getprop("/tmp/aroma-data/archidroid.prop", "xposed-xprivacy") == "1" then
				ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Including XPrivacy module");
				package_extract_dir("_archidroid/apps/xposed/xprivacy", "/");
			endif;

		endif;

		set_progress(0.82);


		################
		### KEYBOARD ###
		################

		### GOOGLE ###
		if file_getprop("/tmp/aroma-data/archidroid.prop", "keyboard") == "google" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google keyboard");
			package_extract_dir("_archidroid/gapps/pa/GApps/keyboardgoogle", "/system");
		endif;

		### STOCK ###
		if file_getprop("/tmp/aroma-data/archidroid.prop", "keyboard") == "stock" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Stock keyboard");
		else
			delete("/system/app/LatinIME.apk", "/system/app/LatinIME.odex");
		endif;

		set_progress(0.84);


		################
		### LAUNCHER ###
		################

		### GOOGLE ###
		if file_getprop("/tmp/aroma-data/archidroid.prop", "launcher") == "google" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Google launcher");
			package_extract_dir("_archidroid/gapps/pa/GApps/googlenow", "/system");
		endif;

		### NOVA ###
		if file_getprop("/tmp/aroma-data/archidroid.prop", "launcher") == "nova" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Nova launcher");
			package_extract_dir("_archidroid/apps/nova", "/");
		endif;

		### STOCK ###
		if file_getprop("/tmp/aroma-data/archidroid.prop", "launcher") == "stock" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Stock launcher");
		else
			delete("/system/priv-app/CMHome.apk", "/system/priv-app/CMHome.odex", "/system/priv-app/Launcher3.apk", "/system/priv-app/Launcher3.odex", "/system/priv-app/Trebuchet.apk", "/system/priv-app/Trebuchet.odex");
		endif;

		set_progress(0.85);


		#####################
		### BOOTANIMATION ###
		#####################

		if file_getprop("/tmp/aroma-data/archidroid.prop", "bootanimation") == "archi3" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid 3.X bootanimation");
			package_extract_dir("_archidroid/bootanimations/archi3", "/");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "bootanimation") == "archi2" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid 2.X bootanimation");
			package_extract_dir("_archidroid/bootanimations/archi2", "/");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "bootanimation") == "archi1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying ArchiDroid 1.X bootanimation");
			package_extract_dir("_archidroid/bootanimations/archi1", "/");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "bootanimation") == "stock" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Applying Stock bootanimation");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "bootanimation") == "none" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Disabling bootanimation");
			package_extract_file("_archidroid/bootanimations/none/disablebootanim.sh", "/tmp/disablebootanim.sh");
			set_perm(0, 0, 0755, "/tmp/disablebootanim.sh");
			run_program("/tmp/disablebootanim.sh");
			delete("/tmp/disablebootanim.sh");
			delete("/system/media/bootanimation.zip");
		endif;

		set_progress(0.86);


		##############
		### TWEAKS ###
		##############

		ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Executing post-install ArchiDroid scripts");
		package_extract_file("_archidroid/tweaks/build.prop/tweaks.sh", "/tmp/tweaks.sh");
		set_perm(0, 0, 0755, "/tmp/tweaks.sh");
		run_program("/tmp/tweaks.sh");
		delete("/tmp/tweaks.sh");

		if file_getprop("/tmp/aroma-data/archidroid.prop", "navibar") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Navigation Bar enabled");
			package_extract_file("_archidroid/tweaks/build.prop/navibarON.sh", "/tmp/navibarON.sh");
			set_perm(0, 0, 0755, "/tmp/navibarON.sh");
			run_program("/tmp/navibarON.sh");
			delete("/tmp/navibarON.sh");
		else
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Navigation Bar disabled");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "cell") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Cell Broadcasts enabled");
		else
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Cell Broadcasts disabled");
			delete("/system/app/CellBroadcastReceiver.apk", "/system/app/CellBroadcastReceiver.odex");
		endif;

		set_progress(0.87);


		############
		### APPS ###
		############

		if file_getprop("/tmp/aroma-data/archidroid.prop", "adaway") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing AdAway");
			package_extract_dir("_archidroid/apps/adaway", "/");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "cooltool") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing CoolTool");
			package_extract_dir("_archidroid/apps/cooltool", "/");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "esfileexplorer") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing ES File Explorer");
			package_extract_dir("_archidroid/apps/esfileexplorer", "/");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "fdroid") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing F-Droid");
			package_extract_dir("_archidroid/apps/fdroid", "/");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "greenify") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Greenify");
			package_extract_dir("_archidroid/apps/greenify", "/");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "lmt") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing LMT");
			package_extract_dir("_archidroid/apps/lmt", "/");
		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "mxplayer") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing MXPlayer");
			package_extract_dir("_archidroid/apps/mxplayer", "/");
		endif;

#		if file_getprop("/tmp/aroma-data/archidroid.prop", "spiritfm") == "1" then
#			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Spirit FM");
#			package_extract_dir("_archidroid/apps/spiritfm", "/");
#		endif;

		if file_getprop("/tmp/aroma-data/archidroid.prop", "titaniumbackup") == "1" then
			ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Installing Titanium Backup");
			package_extract_dir("_archidroid/apps/titaniumbackup", "/");
		endif;


		set_progress(0.90);

		### LOCK ###
		run_program("/tmp/adlock.sh", "lock", "/system/etc/hosts");
	endif;
	set_progress(0.98);
endif;

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Syncing system");
run_program("/sbin/sync");

set_progress(0.99);

ui_print("<b><#ff0000>root</#><#ecec36>@</#><#0cdfdf>ArchiDroid</#><#ecec36>:~</#><#c00cdf>#</#></b> Done!");

ui_print("===================================");
ui_print("  ArchiDroid flashed successfully  ");
ui_print("===================================");
set_progress(1.0);
