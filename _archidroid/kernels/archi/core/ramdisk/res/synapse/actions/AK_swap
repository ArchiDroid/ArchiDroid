#!/system/bin/sh

#     _             _     _ _  __                    _
#    / \   _ __ ___| |__ (_) |/ /___ _ __ _ __   ___| |
#   / _ \ | '__/ __| '_ \| | ' // _ \ '__| '_ \ / _ \ |
#  / ___ \| | | (__| | | | | . \  __/ |  | | | |  __/ |
# /_/   \_\_|  \___|_| |_|_|_|\_\___|_|  |_| |_|\___|_|
#
# Copyright 2015 Łukasz "JustArchi" Domeradzki
# Contact: JustArchi@JustArchi.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Read -> get current value of $1 swap file
# Write -> set $2 megabytes to $1 swap file, and activate it if needed

SWAP_ACTIVE() {
	if [[ -e "$1" ]]; then
		return $(
			RET=1 # Swap exists and is inactive
			awk '{print $1}' < /proc/swaps | (while read SWAP_ACTIVE; do
				if [[ "$SWAP_ACTIVE" = "$1" ]]; then
					RET=0 # Swap exists and is active
					break
				fi
			done
			echo "$RET")
		)
	fi
	return 2 # Swap doesn't exist
}

if [[ -z "$2" ]]; then # Read mode
	if SWAP_ACTIVE "$1"; then
		du -m "$1" | awk '{print $1}'
	else
		echo "0"
	fi
else # Write mode
	SWAP_ACTIVE_NOW="$(SWAP_ACTIVE "$1"; echo $?)"
	if [[ "$SWAP_ACTIVE_NOW" -eq 0 && "$(du -m "$1" | awk '{print $1}')" -eq "$2" ]]; then # If swap is active, and has the same size, we have nothing to do
		return 0
	fi
	if [[ "$SWAP_ACTIVE_NOW" -eq 0 ]]; then # If swap is active already, turn it off
		swapoff "$1"
		rm "$1"
	fi
	if [[ "$2" -gt 0 ]]; then # If size is greater than 0, create and activate new swap
		dd if=/dev/zero of="$1" bs=1m count="$2" >/dev/null 2>&1
		mkswap "$1"
		chown 0:0 "$1" # We don't want to create
		chmod 0600 "$1" # A potential security risk

		SWAP_BIN="swapon"
		SWAP_CMD="-p 1"
		if ! swapon 2>&1 | grep -qi "\-p pri"; then # If swapon doesn't support priority
			if ! busybox swapon 2>&1 | grep -qi "\-p pri"; then # If busybox swapon doesn't support priority
				SWAP_CMD="" # Disable priority
			else
				SWAP_BIN="busybox swapon" # Change binary to busybox swapon, as it supports priority
			fi
		fi

		$SWAP_BIN $SWAP_CMD "$1"
	fi
fi
